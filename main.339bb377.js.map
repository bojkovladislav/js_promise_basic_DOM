{"version":3,"sources":["scripts/main.js"],"names":["promise1","Promise","resolve","document","querySelector","addEventListener","promise2","reject","setTimeout","Error","messageHandler","type","body","insertAdjacentHTML","then","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAW,IAAIC,QAAQ,SAACC,GACfC,SAASC,cAAc,SAE/BC,iBAAiB,QAAS,WAAMH,OAAAA,QAGjCI,EAAW,IAAIL,QAAQ,SAACC,EAASK,GACrCC,WAAW,WAAMD,OAAAA,EAAOE,QAAQ,OAG5BC,EAAiB,WAACC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,UACtB,OAAA,WACLR,OAAAA,SAASS,KAAKC,mBACZ,YACS,YAATF,EAFF,kDAAA,2DAQJX,EAASc,KAAKJ,KAAkBK,MAAML,EAAe,UACrDJ,EAASQ,KAAKJ,KAAkBK,MAAML,EAAe","file":"main.339bb377.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst promise1 = new Promise((resolve) => {\r\n  const logo = document.querySelector('.logo');\r\n\r\n  logo.addEventListener('click', () => resolve());\r\n});\r\n\r\nconst promise2 = new Promise((resolve, reject) => {\r\n  setTimeout(() => reject(Error), 3000);\r\n});\r\n\r\nconst messageHandler = (type = 'success') => {\r\n  return () =>\r\n    document.body.insertAdjacentHTML(\r\n      'beforeend',\r\n      type === 'success'\r\n        ? `<div class=\"message\">Promise was resolved</div>`\r\n        : `<div class=\"error-message\">Promise was rejected</div>`\r\n    );\r\n};\r\n\r\npromise1.then(messageHandler()).catch(messageHandler('error'));\r\npromise2.then(messageHandler()).catch(messageHandler('error'));\r\n"]}